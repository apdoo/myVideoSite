<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.hexor.dao.IVideoMapper">
   <sql id="columnVideo">
        title,
        imgName,
        videoName,
        infotime,
        updatetime,
        rate,
        views,
        favourite,
        viewAuthority,
        vkey,
        tags,
        authorId,
        author,
        description
	 </sql>
    <!--不带视频名字 如:10097.flv 防止被直接下载-->
    <resultMap type="com.hexor.repo.Video" id="simplyVideoResultMap">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="imgName" column="imgName"/>
        <result property="infotime" column="infotime"/>
        <result property="updatetime" column="updatetime"/>
        <result property="rate" column="rate"/>
        <result property="views" column="views"/>
        <result property="favourite" column="favourite"/>
        <result property="viewAuthority" column="viewAuthority"/>
        <result property="vkey" column="vkey"/>
        <result property="tags" column="tags"/>
        <result property="authorId" column="authorId"/>
        <result property="author" column="author"/>
        <result property="description" column="description"/>
    </resultMap>

    <resultMap type="com.hexor.repo.Video" id="videoResultMap">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="imgName" column="imgName"/>
        <result property="videoName" column="videoName"/>
        <result property="infotime" column="infotime"/>
        <result property="updatetime" column="updatetime"/>
        <result property="rate" column="rate"/>
        <result property="views" column="views"/>
        <result property="favourite" column="favourite"/>
        <result property="viewAuthority" column="viewAuthority"/>
        <result property="vkey" column="vkey"/>
        <result property="tags" column="tags"/>
        <result property="authorId" column="authorId"/>
        <result property="author" column="author"/>
        <result property="description" column="description"/>
    </resultMap>
    <!--查询所有视频-->
    <select id="selectAll" resultMap="simplyVideoResultMap">
        select * from video
    </select>
    <!-- 针对mysql的分页 limit函数,针对本地化的视频  ${xxxx}：$将传入的数据直接显示生成在sql中，对于字符串数据，需要手动加上引号。-->
    <select id="limit" parameterType="com.hexor.repo.Pager" resultMap="simplyVideoResultMap">
        select * from video   order by  ${type} desc limit #{index},#{data}
    </select>
    <!--首页根据发布时间查找最新的条视频信息-->
    <select id="selectRecently" resultMap="simplyVideoResultMap">
        select * from video  order by updatetime desc limit 15
    </select>
    <!--查询总视频数-->
    <select id="getTotalCounts" resultType="long">
        select count(*) from video
    </select>
    <!--查询观看最多的视频列表-->
    <select id="getMostViewsVideos" parameterType="int" resultMap="simplyVideoResultMap">
        select * from video order by views desc limit #{value}
    </select>
    <!--查询随机的一组的视频列表-->
    <select id="selectRand" parameterType="int" resultMap="simplyVideoResultMap">
        select *, rand() as random from video order by random limit #{value}
    </select>
    <!--查询出一条视频信息-->
    <select id="selectByVkey" parameterType="String"  resultType="com.hexor.repo.Video">
        select * from video where vkey=#{value} limit 1
    </select>
    <!--搜索符合视频的总数-->
    <select id="searchTotalCounts" parameterType="String" resultType="long">
        select count(*) from video where title  LIKE CONCAT('%','${value}','%' )
    </select>
    <!--模糊搜索视频按照更新时间排序-->
    <select id="searchVideosLimit" parameterType="com.hexor.repo.Pager" resultMap="simplyVideoResultMap">
        select * from video where title LIKE CONCAT('%','${type}','%' )   order by   updatetime  desc limit #{index},#{data}
    </select>
    <!--rate fav views 动态加1 如果set中一个条件都不满足，即set中包含的内容为空的时候就会报错。-->
    <update id="videoAddSelf" parameterType="Map">
        update video
        <set>
            <if test="rate!=null">
                rate=if(isnull(rate),0,rate)+1,
            </if>
            <if test="favourite!=null">
                favourite=if(isnull(favourite),0,favourite)+1,
            </if>
            <if test="views!=null">
                views=if(isnull(views),0,views)+1
            </if>
        </set>
        where vkey=#{vkey}
    </update>
    <!--rate fav views 动态加1 如果set中一个条件都不满足，即set中包含的内容为空的时候就会报错。-->
    <update id="videoReduceSelf" parameterType="Map">
        update video
        <set>
            <if test="rate!=null">
                rate=if(isnull(rate),0,rate)-1,
            </if>
            <if test="favourite!=null">
                favourite=if(isnull(favourite),0,favourite)-1,
            </if>
            <if test="views!=null">
                views=if(isnull(views),0,views)-1
            </if>
        </set>
        where vkey=#{vkey}
    </update>
    <!--查询用户收藏的视频列表-->
    <select id="selectVideosInVkeys"   resultMap="simplyVideoResultMap">
        Select  *  from video where vkey in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
 </mapper>